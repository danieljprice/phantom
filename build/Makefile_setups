#----------------------------------------------------------------
#
# Check for obsolete setups and replace with generic version
#
#----------------------------------------------------------------
ifeq ($(SETUP), HLTau) # [buildbot skip]
    OBSOLETE_SETUP=yes
    OLDSETUP= HLTau
    override SETUP=disc
endif
ifeq ($(SETUP), dustyHLTau) # [buildbot skip]
    OBSOLETE_SETUP=yes
    OLDSETUP= dustyHLTau
    override SETUP=dustydisc
endif
ifeq ($(SETUP), mcfost) # [buildbot skip]
    OBSOLETE_SETUP=yes
    OLDSETUP=mcfost
    override SETUP=disc
    MCFOST=yes
endif
ifeq ($(SETUP), dustymcfost) # [buildbot skip]
    OBSOLETE_SETUP=yes
    OLDSETUP=dustymcfost
    override SETUP=dustydisc
    MCFOST=yes
endif
ifeq ($(SETUP), planets) # [buildbot skip]
    OBSOLETE_SETUP=yes
    OLDSETUP= planets
    override SETUP=disc
endif
ifeq ($(SETUP), binarydisc) # [buildbot skip]
    OBSOLETE_SETUP=yes
    OLDSETUP= binarydisc
    override SETUP=disc
endif
ifeq ($(SETUP), dustybinarydisc) # [buildbot skip]
    OBSOLETE_SETUP=yes
    OLDSETUP= dustybinarydisc
    override SETUP=dustydisc
endif
ifeq ($(SETUP), Lense-Thirring) # [buildbot skip]
    OBSOLETE_SETUP=yes
    OLDSETUP= Lense-Thirring
    override SETUP=disc
endif
ifeq ($(SETUP), warp) # [buildbot skip]
    OBSOLETE_SETUP=yes
    OLDSETUP= warp
    override SETUP=disc
endif
ifeq ($(SETUP), rndisc) # [buildbot skip]
    OBSOLETE_SETUP=yes
    OLDSETUP= rndisc
    override SETUP=lightcurvedisc
endif
ifeq ($(SETUP), lightcurvedisc) # [buildbot skip]
    OBSOLETE_SETUP=yes
    OLDSETUP= lightcurvedisc
    override SETUP=adiabaticdisc
endif
ifeq ($(SETUP), common) # [buildbot skip]
    OBSOLETE_SETUP=yes
    OLDSETUP= common
    override SETUP=binary
endif

#----------------------------------------------------------------
# Current code setup options
#----------------------------------------------------------------
ifeq ($(SETUP), empty)
#   empty setup for external-driver simulation
    SETUPFILE= setup_empty.f90
    IND_TIMESTEPS=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), wddisc)
#   disc around a white dwarf
    ISOTHERMAL=yes
    SETUPFILE=setup_wddisc.f90
    KNOWN_SETUP=yes
    DUST=yes
endif

ifeq ($(SETUP), asteroidwind)
#   asteroid emitting a wind (Trevascus et al. 2021)
    SETUPFILE=setup_asteroidwind.f90
    SRCINJECT=evolve_planet.f90 inject_randomwind.f90
    IND_TIMESTEPS=yes
    CONST_AV=yes
    ISOTHERMAL=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), randomwind)
#   asteroid emitting a wind (Trevascus et al. 2021)
    SETUPFILE=setup_disc.f90
    SRCINJECT=evolve_planet.f90 inject_randomwind.f90
    IND_TIMESTEPS=yes
    CONST_AV=yes
    ISOTHERMAL=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), solarsystem)
#   planets and minor bodies in the solar system
    SETUPFILE=utils_ephemeris.f90 utils_mpc.f90 set_solarsystem.f90 setup_solarsystem.f90
    KNOWN_SETUP=yes
    GRAVITY=yes
    DUST=yes
    MODFILE=moddump_sink2gas.f90
endif

ifeq ($(SETUP), galdisc)
#   galactic disc simulations
    IND_TIMESTEPS=yes
    H2CHEM=yes
    SETUPFILE= setup_galdisc.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), galdiscmhd)
#   galactic disc simulations with magnetic fields
    IND_TIMESTEPS=yes
    ISOTHERMAL=yes
    MHD=yes
    SETUPFILE= setup_galdisc.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), turbdrive)
#   driven turbulence
    PERIODIC=yes
    DRIVING=yes
    SETUPFILE= setup_unifdis.f90
    MULTIRUNFILE= multirun_mach.f90
    KNOWN_SETUP=yes
    ISOTHERMAL=yes
endif

ifeq ($(SETUP), taylorgreen)
#   Taylor-Green vortex problem
    SETUPFILE= setup_taylorgreen.f90
    PERIODIC=yes
    ISOTHERMAL=yes
    KNOWN_SETUP=yes
    KERNEL=quintic
    MODFILE= moddump_taylorgreen.f90
endif

ifeq ($(SETUP), turb)
#   driven supersonic turbulence (hydro, mhd, dusty)
    SETUPFILE     = setup_turb.f90
    PERIODIC      = yes
    DRIVING       = yes
    IND_TIMESTEPS = yes
    KNOWN_SETUP   = yes
    ISOTHERMAL    = yes
endif

ifeq ($(SETUP), dustyturb)
#   dusty supersonic turbulence
    SETUPFILE     = setup_turb.f90
    PERIODIC      = yes
    DRIVING       = yes
    IND_TIMESTEPS = yes
    KNOWN_SETUP   = yes
    ISOTHERMAL    = yes
    DUST          = yes
endif

ifeq ($(SETUP), wd)
#   white dwarf from stellar model
    SETUPFILE     = setup_star.f90
    GRAVITY       = yes
    KNOWN_SETUP   = yes
    MODFILE       = moddump_binarystar.f90
    ANALYSIS      = analysis_gws.f90
endif

ifeq ($(SETUP), disc)
#   locally isothermal gas disc
    SETUPFILE= setup_disc.f90
    ANALYSIS= analysis_disc.f90
    ISOTHERMAL=yes
    KNOWN_SETUP=yes
    MULTIRUNFILE= multirun.f90
    IND_TIMESTEPS=yes
endif

ifeq ($(SETUP), boilingplanets)
#   locally isothermal gas disc with planet evolution
    SETUPFILE= setup_disc.f90
    ANALYSIS= analysis_disc.f90
    ISOTHERMAL=yes
    KNOWN_SETUP=yes
    IND_TIMESTEPS=yes
    SRCINJECT= evolve_planet.f90 inject_randomwind.f90
endif

ifeq ($(SETUP), grtde)
#   tidal disruption event in general relativity
    SETUPFILE= setup_grtde.f90
    GR=yes
    METRIC=kerr
    KNOWN_SETUP=yes
    GRAVITY=yes
    IND_TIMESTEPS=yes
#    ANALYSIS=analysis_tde.f90
    ANALYSIS= analysis_gws.f90
endif

ifeq ($(SETUP), radiotde)
#   radio tidal disruption event in general relativity
    GR=yes
    METRIC=minkowski
    KNOWN_SETUP=yes
    ANALYSIS=analysis_radiotde.f90
    MODFILE=moddump_radiotde.f90
    SRCINJECT=inject_sim.f90
endif

ifeq ($(SETUP), collgr)
#   colliding binary star in general relativity
    SETUPFILE= setup_binary_coll.f90
    GR=yes
    METRIC=kerr
    KNOWN_SETUP=yes
    GRAVITY=yes
    IND_TIMESTEPS=yes
endif

ifeq ($(SETUP), srpolytrope)
#   polytrope in special relativity
    SETUPFILE= setup_srpolytrope.f90
    GR=yes
    METRIC=minkowski
    KNOWN_SETUP=yes
    IND_TIMESTEPS=yes
    GRAVITY=yes
    MODFILE=moddump_polytrope.f90
endif

ifeq ($(SETUP), grdisc)
#   accretion disc around a Kerr black hole
    SETUPFILE= setup_grdisc.f90
    ANALYSIS= analysis_disc.f90
    GR=no
    METRIC=kerr
    KNOWN_SETUP=yes
    MULTIRUNFILE= multirun.f90
    IND_TIMESTEPS=yes
    NCELLSMAX=2*maxp
    CONST_AV=yes
endif

ifeq ($(SETUP), firehose)
#   injection of a stream of gas as a firehose
    SRCINJECT= inject_firehose.f90
    SETUPFILE= setup_firehose.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), adiabaticdisc)
#   adiabatic disc
    SETUPFILE= setup_disc.f90
    ANALYSIS= analysis_disc.f90
    KNOWN_SETUP=yes
    IND_TIMESTEPS=yes
endif

ifeq ($(SETUP), raddisc)
#   adiabatic disc with radiation
    SETUPFILE= setup_disc.f90
    ANALYSIS= analysis_disc.f90
    KNOWN_SETUP=yes
    #IND_TIMESTEP=yes
    RADIATION=yes
endif

ifeq ($(SETUP), gwdisc)
#   disc around inspiralling binary with gravitational wave decay
    SETUPFILE= setup_gwdisc.f90
    ANALYSIS= analysis_disc.f90
    IND_TIMESTEPS=yes
    ISOTHERMAL=yes
    MULTIRUNFILE= multirun.f90
    SRCPOT= ${SRCPOTS:extern_binary.f90=extern_binary_gw.f90}
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), nshwdisc)
#   disc around a neutron star
    SETUPFILE= setup_nsdisc.f90
    ANALYSIS= analysis_disc.f90
    MODFILE= moddump_changemass.f90
    ISOTHERMAL=yes
    IND_TIMESTEPS=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), prtest)
#   simple test of Poynting-Robertson drag
    SETUPFILE= setup_prtest.f90
    ISOTHERMAL=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), binarydiscMFlow)
#   binarydiscMFlow setup
    FPPFLAGS= -DMFLOW #-DVMFLOW -DBINPOS
    SETUPFILE= setup_disc.f90
    ANALYSIS= analysis_disc_MFlow.f90
#    ANALYSIS= analysis_binarydisc.f90
    ISOTHERMAL=yes
    LIVE_ANALYSIS=no
    IND_TIMESTEPS=yes
    MODFILE= moddump_removeparticles_cylinder.f90 #moddump_addpartfortest.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), planetdisc)
#   planet disc interaction with fixed planet orbit
    SETUPFILE= setup_planetdisc.f90
    ISOTHERMAL=yes
    IND_TIMESTEPS=yes
    ANALYSIS=analysis_disc.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), exoALMA)
#   exoALMA comparison of planet-disc interaction
    SETUPFILE=setup_disc.f90
    ISOTHERMAL=yes
    IND_TIMESTEPS=yes
    ANALYSIS=analysis_disc.f90
    SRCINJECT=inject_steadydisc.f90
    SRCINJECT_DEPS=set_disc.F90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), planetatm)
#   disc interaction with fixed planet orbit + atmosphere
    SETUPFILE= setup_disc.f90
    ISOTHERMAL=yes
    IND_TIMESTEPS=yes
    ANALYSIS=analysis_disc.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), torus)
#   MRI torus
    SETUPFILE= setup_torus.f90
    ANALYSIS= analysis_torus.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), galcen)
#   galactic centre
    SETUPFILE= setup_galcen_stars.f90
    SRCINJECT= inject_galcen_winds.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), starcluster)
#   Cluster of stars (ptmass)
    SETUPFILE= setup_starcluster.f90
    KNOWN_SETUP=yes
endif

#--- Bondi accretion/wind ---------------------------
ifeq ($(SETUP), bondi)
#   Bondi accretion flow
    SETUPFILE=bondiexact.f90 setup_bondi.f90
    KNOWN_SETUP=yes
    KERNEL=quintic
    ISOTHERMAL=yes
endif
ifeq ($(SETUP), grbondi)
#   Bondi accretion flow in GR
    SETUPFILE=bondiexact_gr.f90 setup_bondi.f90
    KNOWN_SETUP=yes
    KERNEL=quintic
    GR=yes
    METRIC=schwarzschild
endif
ifeq ($(SETUP), grbondi-inject)
#   Bondi accretion flow in GR with particle injection
    SETUPFILE= setup_bondiinject.F90
    SRCINJECT=bondiexact_gr.f90 inject_bondi.f90
    KNOWN_SETUP=yes
    KERNEL=quintic
    GR=yes
    METRIC=schwarzschild
endif
#-----------------------------------------------

ifeq ($(SETUP), quebec)
#   Terry Tricco
    SETUPFILE = setup_quebec.f90
    GRAVITY = yes
    KNOWN_SETUP = yes
    MODFILE = moddump_binarystar.f90
endif

ifeq ($(SETUP), tde)
#   tidal disruption simulations
    SETUPFILE= setup_grtde.f90
#    ANALYSIS=analysis_tde.f90
    ANALYSIS=analysis_gws.f90
    GRAVITY=yes
    MODFILE=moddump_tidal.f90
    KNOWN_SETUP=yes
    IND_TIMESTEPS=yes
endif

ifeq ($(SETUP), polytrope)
#   single or binary polytrope test
    SETUPFILE= setup_star.f90
#    ANALYSIS=density_profiles.o analysis_polytropes.f90
    ANALYSIS= analysis_gws.f90
    GRAVITY=yes
    ISOTHERMAL=yes
    MODFILE=moddump_binarystar.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), neutronstar)
#   isolated neutron star
    SETUPFILE= setup_star.f90
    ISOTHERMAL=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), sphereinbox)
#   sphere-in-box setup
    PERIODIC=yes
    SETUPFILE= setup_sphereinbox.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), shock)
#   shock tube tests
    PERIODIC=yes
    SETUPFILE= setup_shock.f90
    KERNEL=quintic
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), dustyshock)
#   shock tube tests with dust
    PERIODIC=yes
    SETUPFILE= setup_shock.f90
    DUST=yes
    KERNEL=quintic
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), mhdshock)
#   Ryu & Brio-Wu shock tube tests
    PERIODIC=yes
    SETUPFILE= setup_shock.f90
    MHD=yes
    KERNEL=quintic
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), nimhdshock)
#   non-ideal mhd standing and C shock tests
    PERIODIC=yes
    SETUPFILE= setup_shock.f90
    MHD=yes
    NONIDEALMHD=yes
    KERNEL=WendlandC4
    ISOTHERMAL=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), radshock)
#   shock tube in radiation hydrodynamics
    PERIODIC=yes
    RADIATION=yes
    SETUPFILE= setup_shock.f90
    KERNEL=quintic
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), srshock)
#   special relativistic sod shock tube test
    PERIODIC=yes
    SETUPFILE= setup_shock.f90
    KERNEL=quintic
    GR=yes
    METRIC=minkowski
    KNOWN_SETUP=yes
    CONST_AV=yes
endif

ifeq ($(SETUP), testparticles)
#   test particles
    SETUPFILE= setup_testparticles.f90
    KNOWN_SETUP=yes
    ANALYSIS= analysis_1particle.f90
endif

ifeq ($(SETUP), gr_testparticles)
#   test particles in GR
    SETUPFILE= setup_testparticles.f90
    GR=yes
    METRIC=kerr
    KNOWN_SETUP=yes
    ANALYSIS= analysis_1particle.f90
endif

ifeq ($(SETUP), dustydisc)
#   locally isothermal dusty discs
    SETUPFILE= setup_disc.f90
    MODFILE= moddump_dustadd.f90
    ISOTHERMAL=yes
    DUST=yes
    KNOWN_SETUP=yes
    IND_TIMESTEPS=yes
    ANALYSIS=analysis_dustydisc.f90
endif

ifeq ($(SETUP), growingdisc)
#   locally isothermal dusty discs with growth and fragmentation
    SETUPFILE= setup_disc.f90
    MODFILE= moddump_dustadd.f90
    ISOTHERMAL=yes
    DUST=yes
    KNOWN_SETUP=yes
    IND_TIMESTEPS=yes
    DUSTGROWTH = yes
    ANALYSIS=analysis_dustydisc.f90
    MAXDUSTLARGE=1
    MAXDUSTSMALL=1
endif

ifeq ($(SETUP), growthtomulti)
#   transform dustgrowth dump into multi large grains dump
    MODFILE=moddump_growthtomultigrain.f90
    ISOTHERMAL=yes
    DUST=yes
    KNOWN_SETUP=yes
    IND_TIMESTEPS=yes
    DUSTGROWTH=yes
    MAXDUSTLARGE=25
endif

ifeq ($(SETUP), dustybox)
#   dust in a box
    PERIODIC=yes
    SETUPFILE= setup_dustybox.f90
    MODFILE= moddump_dustadd.f90
    ISOTHERMAL=yes
    DUST=yes
    KNOWN_SETUP=yes
    ANALYSIS= analysis_trackbox.f90
endif

ifeq ($(SETUP), dustysedov)
#   Sedov blast wave test with dust
    PERIODIC=yes
    SETUPFILE= setup_dustysedov.f90
    MODFILE= moddump_dustadd.f90
    DUST=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), dustywave)
#   dust in a box
    PERIODIC=yes
    SETUPFILE= setup_wave.f90
    MODFILE= moddump_dustadd.f90
    DUST=yes
    KNOWN_SETUP=yes
    ANALYSIS= analysis_trackbox.f90
endif

ifeq ($(SETUP), wave)
#   linear wave
    PERIODIC=yes
    SETUPFILE= setup_wave.f90
    KNOWN_SETUP=yes
    KERNEL=quintic
endif

ifeq ($(SETUP), wavedamp)
#   Wave damping test as per Choi et al (2009)
    PERIODIC=yes
    SETUPFILE= setup_wavedamp.f90
    ISOTHERMAL=yes
    NONIDEALMHD=yes
    MHD=yes
    KNOWN_SETUP=yes
    KERNEL=WendlandC4
    ANALYSIS = analysis_bzrms.f90
endif

ifeq ($(SETUP), sedov)
#   Sedov blast wave test
    PERIODIC=yes
    SETUPFILE= setup_sedov.f90
    IND_TIMESTEPS=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), srblast)
#   special relativistic blast wave test (spherical)
    PERIODIC=yes
    SETUPFILE=setup_srblast.f90
    GR=yes
    METRIC=minkowski
    KERNEL=quintic
    KNOWN_SETUP=yes
    CONST_AV=yes
endif

ifeq ($(SETUP), blob)
#   Blob evaporation problem
    PERIODIC=yes
    SETUPFILE= setup_blob.f90
    DOUBLEPRECISION=no
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), kh)
#   Kelvin-Helmholtz problem
    PERIODIC=yes
    SETUPFILE= setup_kh.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), mhdrotor)
#   MHD rotor problem
    PERIODIC=yes
    SETUPFILE= setup_mhdrotor.f90
    MHD=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), jadvect)
#   MHD current loop advection problem
    PERIODIC=yes
    SETUPFILE= setup_jadvect.f90
    MHD=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), alfven)
#   MHD circularly polarised Alfven wave problem
    PERIODIC=yes
    SETUPFILE= setup_alfvenwave.f90
    MHD=yes
    KNOWN_SETUP=yes
    KERNEL=quintic
endif

ifeq ($(SETUP), orstang)
#   Orszag-Tang vortex
    PERIODIC=yes
    SETUPFILE= setup_orstang.f90
    MHD=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), balsarakim)
#   Balsara-Kim 2004
#   set BalsaraKim=.true. in setup_unifdis.f90 to initialise the correct defaults
    PERIODIC=yes
    SETUPFILE= setup_unifdis.f90
    MHD=yes
    KNOWN_SETUP=yes
    SRCINJECT=inject_sne.f90
    KERNEL=quintic
    IND_TIMESTEPS=yes
    H2CHEM=yes
endif

ifeq ($(SETUP), mhdvortex)
#   Balsara (2004) MHD vortex
    PERIODIC=yes
    SETUPFILE= setup_mhdvortex.f90
    MHD=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), mhdsine)
#   MHD sine wave
    PERIODIC=yes
    SETUPFILE= setup_mhdsine.f90
    MHD=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), mhdblast)
#   MHD blast wave test
    SETUPFILE= setup_mhdblast.f90
    PERIODIC=yes
    MHD=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), mhdwave)
#   propagating isolated MHD wave
    SETUPFILE= setup_mhdwave.f90
    PERIODIC=yes
    MHD=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), cluster)
#   star cluster formation
    SETUPFILE= setup_cluster.f90
    MODFILE= moddump_default.f90
    ANALYSIS= phantom_pdfs.o analysis_MWpdf.f90 #analysis_sinkmass.f90
    ISOTHERMAL=yes
    GRAVITY=yes
    IND_TIMESTEPS=yes
    KNOWN_SETUP=yes
    MAXPTMASS=1000
endif

ifeq ($(SETUP), binary)
#   binary stars
    SETUPFILE= setup_binary.f90
    #SETUPFILE= setup_chinchen.f90
    KNOWN_SETUP=yes
    GRAVITY=yes
endif

ifeq ($(SETUP), hierarchical)
#   hierarchical system setup
    #SRCINJECT= set_hierarchical.f90 set_binary.f90 inject_rochelobe.f90
    SETUPFILE= setup_hierarchical.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), star)
#   import stellar model from 1D stellar evolution code
    SETUPFILE= setup_star.f90
    MODFILE= set_binary.f90 moddump_binary.f90
    ANALYSIS= ${SRCNIMHD} utils_summary.o utils_omp.o ptmass.o energies.o analysis_common_envelope.f90
    KNOWN_SETUP=yes
    GRAVITY=yes
endif

ifeq ($(SETUP), grstar)
#   star in GR using Minkowski metric
    GR=yes
    METRIC=minkowski
    IND_TIMESTEPS=yes
    SETUPFILE= setup_star.f90
    MODFILE= moddump_tidal.f90
    ANALYSIS= ${SRCNIMHD} utils_summary.o utils_omp.o ptmass.o energies.o analysis_common_envelope.f90
    KNOWN_SETUP=yes
    GRAVITY=yes
endif

ifeq ($(SETUP), radstar)
#   setup a star as in the star setup but with radiation
    SETUPFILE= setup_star.f90
    MODFILE= set_binary.f90 moddump_binary.f90
    ANALYSIS= ${SRCNIMHD} utils_summary.o utils_omp.o ptmass.o energies.o analysis_common_envelope.f90
    KNOWN_SETUP=yes
    GRAVITY=yes
    RADIATION=yes
endif

ifeq ($(SETUP), dustystar)
#   import stellar model from 1D stellar evolution code w/dust
    FPPFLAGS= -DDUST_NUCLEATION -DSTAR
    SETUPFILE= setup_star.f90
    MODFILE= set_binary.f90 moddump_binary.f90
    ANALYSIS= ${SRCNIMHD} utils_summary.o utils_omp.o ptmass.o energies.o analysis_common_envelope.f90 dust_formation.f90
    KNOWN_SETUP=yes
    GRAVITY=yes
    SINK_RADIATION=yes
endif

ifeq ($(SETUP), isowind)
#   isothermal spherical wind
    SETUPFILE= setup_wind.f90
    ISOTHERMAL=yes
    INJECT_PARTICLES=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), wind)
#   wind setup with dust nucleation
    SETUPFILE= setup_wind.f90
    ANALYSIS= analysis_cooling.F90
    SINK_RADIATION=yes
    DUST_NUCLEATION=yes
    INJECT_PARTICLES=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), mhdwind)
#   wind setup with dust nucleation and MHD
    SETUPFILE= setup_wind.f90
    ANALYSIS= analysis_cooling.f90
    SINK_RADIATION=yes
    DUST_NUCLEATION=yes
    INJECT_PARTICLES=yes
    MHD=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), ismwind)
#   wind setup with dust nucleation and ISM cooling
    SETUPFILE= setup_wind.f90
    ANALYSIS= analysis_cooling.F90
    H2CHEM=yes
    SINK_RADIATION=yes
    DUST_NUCLEATION=yes
    INJECT_PARTICLES=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), radwind)
#   wind setup with dust nucleation
    SETUPFILE= setup_wind.f90
    ANALYSIS= utils_getneighbours.f90 utils_raytracer_all.f90 analysis_raytracer.f90
    SINK_RADIATION=yes
    DUST_NUCLEATION=yes
    INJECT_PARTICLES=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), test)
#   default setup for tests
    PERIODIC=yes
    CONST_ARTRES=yes
    MHD=yes
    DUST=yes
    RADIATION=yes
    SINK_RADIATION=yes
    DUST_NUCLEATION=yes
    KERNEL=cubic
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), BHL)
#   Bondi-Hoyle-Lyttleton setup
    SETUPFILE= setup_BHL.f90
    SRCINJECT= inject_BHL.f90
    KNOWN_SETUP=yes
    IND_TIMESTEPS=yes
endif

ifeq ($(SETUP), windtunnel)
#   Wind tunnel setup
    SETUPFILE= setup_windtunnel.f90
    SRCINJECT= inject_windtunnel.f90
    GRAVITY=yes
    KNOWN_SETUP=yes
    IND_TIMESTEPS=yes
    ANALYSIS=analysis_common_envelope.f90
endif

ifeq ($(SETUP), masstransfer)
#   Wind tunnel setup
    SETUPFILE= setup_masstransfer.f90
    SRCINJECT= readwrite_mesa.f90 inject_masstransfer.f90 
    KNOWN_SETUP=yes
    IND_TIMESTEPS=yes
    ANALYSIS=analysis_common_envelope.f90
endif

ifeq ($(SETUP), jet)
#   Jet simulation from Price, Tricco & Bate (2012)
    SETUPFILE= setup_sphereinbox.f90
    #ANALYSIS= analysis_jet.f90
    ANALYSIS= ${SRCNIMHD} analysis_protostar_environ.F90
    PERIODIC=yes
    GRAVITY=yes
    ISOTHERMAL=yes
    MHD=yes
    IND_TIMESTEPS=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), jetnimhd)
#   Simulation from Wurster, Price & Bate (2016,2017) et seq
    SETUPFILE= setup_sphereinbox.f90
    ANALYSIS= ${SRCNIMHD} analysis_protostar_environ.F90
    PERIODIC=yes
    GRAVITY=yes
    ISOTHERMAL=yes
    MHD=yes
    NONIDEALMHD=yes
    IND_TIMESTEPS=yes
    MODFILE=moddump_CoM.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), jetdusty)
#   dust in star formation
    SETUPFILE= setup_sphereinbox.f90
    PERIODIC=yes
    GRAVITY=yes
    ISOTHERMAL=yes
    IND_TIMESTEPS=yes
    DUST=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), converging)
#   Simulation from Wurster & Bonnell (2023)
    SETUPFILE= setup_collidingclouds.f90
    PERIODIC=yes
    GRAVITY=yes
    IND_TIMESTEPS=yes
    ANALYSIS= analysis_clumpfindWB23.F90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), sgdisc)
#   self-gravitating disc
    IND_TIMESTEPS=yes
    GRAVITY=yes
    SETUPFILE= setup_disc.f90
    ANALYSIS = utils_getneighbours.F90 utils_omp.F90 analysis_disc_stresses.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), dustysgdisc)
#   self-gravitating dustydisc
    SETUPFILE= setup_disc.f90
    GRAVITY=yes
    DUST=yes
    KNOWN_SETUP=yes
    IND_TIMESTEPS=yes
    ANALYSIS=analysis_dustydisc.f90
endif

ifeq ($(SETUP), isosgdisc)
#   isothermal self-gravitating disc
    SETUPFILE= setup_disc.f90
    GRAVITY=yes
    IND_TIMESTEPS=yes
    #ANALYSIS=analysis_dustydisc.f90
    ISOTHERMAL=yes
    KNOWN_SETUP=yes
    SRCINJECT= inject_keplerian.f90
    ANALYSIS = utils_getneighbours.F90 utils_omp.F90 analysis_disc_stresses.f90
endif

ifeq ($(SETUP), dustyisosgdisc)
#   isothermal self-gravitating dustydisc
    SETUPFILE= setup_disc.f90
    GRAVITY=yes
    DUST=yes
    IND_TIMESTEPS=yes
    ANALYSIS=analysis_dustydisc.f90
    ISOTHERMAL=yes
    SRCINJECT= inject_keplerian.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), isosgstream)
#   isothermal self-gravitating disc with streamer of material
    SETUPFILE= setup_disc.f90
    GRAVITY=yes
    IND_TIMESTEPS=yes
    #ANALYSIS=analysis_dustydisc.f90
    ISOTHERMAL=yes
    KNOWN_SETUP=yes
    SRCINJECT= set_streamer.f90 inject_streamer.f90
endif

ifeq ($(SETUP), dustsettle)
#   dust settling test from PL15
    SETUPFILE= setup_dustsettle.f90
    DUST=yes
    PERIODIC=yes
    ISOTHERMAL=yes
    MODFILE=moddump_dustadd.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), test2)
#   default setup for tests
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), testcyl)
#   tests with free boundaries + ind timesteps
    CONST_AV=yes
    IND_TIMESTEPS=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), testkd)
#   tests with ind_timesteps + periodic
    PERIODIC=yes
    IND_TIMESTEPS=yes
    CONST_ARTRES=yes
    MHD=yes
    RADIATION=yes
    SINK_RADIATION=yes
    DUST_NUCLEATION=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), testgrav)
#   self-gravity unit tests
    GRAVITY=yes
    CONST_ARTRES=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), testsinktree)
#   self-gravity with sinks in tree
    GRAVITY=yes
    SINKTREE=yes
    CONST_ARTRES=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), testdust)
#   dust unit tests
    PERIODIC=yes
    DUST=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), testgrowth)
#   dust growth unit tests
    PERIODIC=yes
    DUST=yes
    DUSTGROWTH=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), testnimhd)
#   non-ideal MHD (+boundary parts+super-timesteps) unit tests
    PERIODIC=yes
    ISOTHERMAL=yes
    NONIDEALMHD=yes
    MHD=yes
    KERNEL=WendlandC4
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), testgr)
#   unit tests of general relativistic code
    GR=yes
    KNOWN_SETUP=yes
    METRIC=kerr
    SETUPFILE= setup_grdisc.f90
endif

ifeq ($(SETUP), testapr)
#   unit tests for apr
    APR=yes
    KNOWN_SETUP=yes
    PERIODIC=yes
endif

ifeq ($(SETUP), flrw)
#   constant density FLRW cosmology with perturbations
    GR=yes
    KNOWN_SETUP=yes
    METRIC=et
    SETUPFILE= setup_flrw.f90
    PERIODIC=yes
endif

ifeq ($(SETUP), flrwpspec)
#   FLRW universe using a CMB powerspectrum
    GR=yes
    KNOWN_SETUP=yes
    METRIC=et
    SETUPFILE= setup_flrwpspec.f90
    PERIODIC=yes
endif

ifeq ($(SETUP), default)
#   default setup, uniform box
    KNOWN_SETUP=yes
    SETUPFILE= setup_unifdis.f90
    PERIODIC=yes
    DUST=yes
endif

ifeq ($(SETUP), galaxies)
#   galaxy merger using data from Wurster & Thacker (2013a,b)
    SETUPFILE= setup_galaxies.f90
    ANALYSIS=analysis_GalMerger.f90
    IND_TIMESTEPS=yes
    GRAVITY=yes
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), nsmerger)
#   Model a neutron star merger; use option 6
    SETUPFILE= setup_star.f90
    ISOTHERMAL=yes
    GRAVITY=yes
    MODFILE=moddump_binarystar.f90
    ANALYSIS=analysis_NSmerger.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), evrard)
#   Evrard collapse test problem
    SETUPFILE= setup_star.f90
    GRAVITY=yes
    ANALYSIS=analysis_sphere.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), tokamak)
#   tokamak torus setup
    ISOTHERMAL=yes
    SETUPFILE= setup_tokamak.f90
    KNOWN_SETUP=yes
endif

ifeq ($(SETUP), sfmcfost) # [buildbot skip]
#   live feedback from mcfost in star formation calculation
    PERIODIC=yes
    SETUPFILE= setup_sphereinbox.f90
    ANALYSIS= analysis_mcfost.f90
    LIVE_ANALYSIS=yes
    KNOWN_SETUP=yes
    MULTIRUNFILE= multirun.f90
    IND_TIMESTEPS=yes
    GRAVITY=yes
    MCFOST=yes
endif

ifeq ($(SETUP), mcfostcmdline) # [buildbot skip]
#   live feedback from mcfost, superseded by mcfost setup
    SETUPFILE= setup_disc.f90
    ANALYSIS= analysis_mcfostcmdline.f90
    LIVE_ANALYSIS=yes
    KNOWN_SETUP=yes
    MULTIRUNFILE= multirun.f90
    IND_TIMESTEPS=yes
endif

ifeq ($(SETUP), radiativebox)
#   test of radiation coupling terms
    SETUPFILE=setup_radiativebox.f90
    KNOWN_SETUP=yes
    RADIATION=yes
    PERIODIC=yes
endif

ifeq ($(SETUP), amuse)
    # H2CHEM=yes
    ISOTHERMAL=no
    GRAVITY=yes
    # IND_TIMESTEPS=yes
    IND_TIMESTEPS=no
    KNOWN_SETUP=yes
    MAXPTMASS=1000
    SETUPFILE= setup_wind.f90
    # ANALYSIS= utils_getneighbours.f90 utils_raytracer_all.f90 analysis_raytracer.f90
    SINK_RADIATION=yes
    DUST_NUCLEATION=yes
    INJECT_PARTICLES=yes
endif
