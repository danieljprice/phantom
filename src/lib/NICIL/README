NICIL is designed to be implemented in a parent code and executed at runtime.  However, it can also be tested as a stand-alone code.  The following will lead the user through a test, and how to make plots showing number densities and the non-ideal MHD coefficients, similar to Fig 1 in Wurster (2016); copies of developer's versions of these plots are included in Graphs_Default/.

1) The default complier is gfortran.  If this is not installed on the user's computer, change the compiler and associated flags in src/Makefile.
2) To compile the three test codes, in the NICIL directory at the command prompt, type
$ make
Four executables should appear: nicil_ex_eta, nicil_ex_sph, nicil_ex_disc and nicil_get_one_point.
3) The programme nicil_ex_eta will calculate the non-ideal MHD coefficients and their constituent components over a range of densities and temperatures.  To run this, in the command prompt, type
$ ./nicil_ex_eta
The processes and parameters that are used will be printed to the screen.  Three data files will be written to the data/ folder: eta_barotropic.dat, data/eta_density.dat and data/eta_temperature.dat.  The first data file calculates the properties over a range of densities using a barotropic equation of state, the second over a range of densities at a constant temperature, and the third over a range of temperatures at a constant density.  The header in each data file labels the property in each column.  A log file, eta_warning.log, is also created, but will only contain useful data if warn_verbose=.true. and warnings are triggered.

3a) This is the default option, however, nicil_ex_eta can accept optional input arguments which will modify what it calculates.  Specifically:
$ ./nicil_ex_eta vsRho    ! Calculates the properties assuming a constant temperature
$ ./nicil_ex_eta vsT      ! Calculates the properties assuming a constant density
$ ./nicil_ex_eta baro     ! Calculates the properties using a barotropic equation of state
$ ./nicil_ex_eta colI     ! Calculates the properties using the rho_max-B_max-T_max relationships from Wurster+2018 (hall), assuming ideal MHD
$ ./nicil_ex_eta colN     ! Calculates the properties using the rho_max-B_max-T_max relationships from Wurster+2018 (hall), assuming non-ideal MHD
$ ./nicil_ex_eta zeta     ! Calculates the properties assuming a constant temperature, density and magnetic field strength for varying zeta_cr
$ ./nicil_ex_eta phase    ! Calculates eta for a rho-B-T phase space
$ ./nicil_ex_eta phaseB   ! Calculates eta for a rho-B phase space
$ ./nicil_ex_eta phaseT   ! Calculates eta for a rho-T phase space
$ ./nicil_ex_eta disc     ! Calculates eta for a typical protoplanetary disc
$ ./nicil_ex_eta all      ! Runs all of the above
Multiple arguments can be passed in.  The default of no arguments is equivalent to
$ ./nicil_ex_eta vsRho vsT baro
3b) For ./nicil_ex_eta disc, the user can either use the default parameters, use a pre-defined disc via
$ ./nicil_ex_eta Wurster2021_discs/disc_param_*.in
where * is replaced by the correct file, or generate their own disc by
$ python generate_disc.py
which will prompt the user regarding all the disc properties, make an input file, and execute that file.  

4a) A plotting script, plot_results.py, is included in the NICIL directory.  This is written in Python 2.7.10, and calls GNUplot (developed in GNUplot 5.0 patchlevel 1).  
4b) If the user does not have GNUplot, the important values can be plotted using the information (i.e. column number and property) in the headers.  
4c) If the user has Python and GNUplot, run the Python script, viz.
$ python plot_results.py
The user will be prompted to state which results to plot; only the options with existing data will be presented.  Next, a GNUplot script, Graphs/plot.gnuplot, will be generated and run.  This will create an eps graph, which will be placed in Graphs/; its file name will be printed to the screen.
4d) The graph can be opened using the user's preferred viewer; the viewer can also be automatically run by plot_results.py by modifying the variable "open_eps," as prompted if no viewer is set.
4e) If the default values are used, then the user's graphs should be identical to the Author's graphs, which are in Graphs_Default/ under the same file name, except with the _Default.eps suffix.

5) The programme nicil_ex_sph can be similarly tested and results plotted, however, its primary use is as an example when implementing NICIL into an existing code.

6) The programme nicil_ex_disc will evolve the magnetic field in a disc, using the requested non-ideal processes.  Command-line input options are ohm, hall, ambi for the non-ideal optiona, and toroidalB to model a toroidal magnetic field (else a poloidal field will be used).  Be aware that this is a very crude evolution, no artificial terms are included so the results are a decent approximation, however, some results can be unstable and should be treated with caution.

7) The programme nicil_get_one_point will prompt the user for an input density, temperature and magnetic field strength, and then will return various number densities and the non-ideal MHD coefficients.

8a) To remove the compiled objects and executables from src/, use
$ make clean
8b) To remove the compiled objects from src/, all the executables, the data files data/*dat, and the graph files Graphs/*eps, use
$ make allclean
8c) To compile the test programmes individually, use
$ make eta
$ make sph
$ make disc
or
$ make one
to compile nicil_ex_eta, nicil_ex_sph, nicil_ex_disc or nicil_get_one_point respectively.

9) It is suggested that the user experiment with various parameters, as defined at the top of src/nicil.F90 between the lines marked 'Input Parameters' and 'End of Input Parameters', to determine their impact on the non-ideal MHD coefficients and their constituent components.  These can be plotted as in step 4.

Note: NICIL has been tested using GNU Fortran (GCC) 4.4.7, GNU Fortran (GCC) 5.1.0, and ifort (IFORT) 12.1.0.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

To implement NICIL into an existing code, please refer to IMPLEMENTATION.txt and use src/nicil_ex_sph.F90 as a template.
For changes made since Wurster (2016) was published, please consult Appendix A of Wurster (2021) and modifications.pdf, which is enclosed in the parent folder.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

For any research in which NICIL (an original or modified version) was used, the following papers must be cited: Wurster (2016) PASA, 33:e041 & Wurster (2021) MNRAS, 501:5873-5891.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=